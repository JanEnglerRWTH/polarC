

Tutorial:
Example mrpc:

First:
export TASK_NAME=mrpc

Second:
Train base model (or use already trained model):

python run_glue.py \
  --model_name_or_path bert-base-uncased \
  --task_name $TASK_NAME \
  --do_train \
  --do_eval \
  --max_seq_length 128 \
  --per_device_train_batch_size 32 \
  --learning_rate 2e-5 \
  --num_train_epochs 3 \
  --output_dir models/$TASK_NAME/Baseline/ \
  --logging_steps 10000\
  --save_steps 10000\
  --overwrite_output_dir
  
  
  
  ***** eval metrics *****

  epoch                   =        3.0
  eval_accuracy           =     0.8382
  eval_combined_score     =     0.8628
  eval_f1                 =     0.8874
  eval_loss               =     0.4161
  eval_runtime            = 0:00:01.74
  eval_samples            =        408
  eval_samples_per_second =    234.365
  eval_steps_per_second   =     29.296


  
  
Third:
Go to main folder and run python bert.py with the path of the trained model

Forth:
Re-train the last layer with polar embeddings:

python run_glue.py \
  --model_name_or_path models/$TASK_NAME/Polar/ \
  --task_name $TASK_NAME \
  --do_train \
  --do_eval \
  --max_seq_length 128 \
  --per_device_train_batch_size 32 \
  --learning_rate 2e-5 \
  --num_train_epochs 5 \
  --output_dir models/$TASK_NAME/Polar/ \
  --logging_steps 10000\
  --save_steps 10000\
  --overwrite_output_dir\
  --use_polar
  
  ***** eval metrics *****
  epoch                   =        5.0
  eval_accuracy           =     0.8064
  eval_combined_score     =     0.8394
  eval_f1                 =     0.8724
  eval_loss               =     0.5707
  eval_runtime            = 0:00:04.02
  eval_samples            =        408
  eval_samples_per_second =     101.41
  eval_steps_per_second   =     12.676



optional Fifth: 
In Eval CUDA OOM:     


  python run_glue.py \
  --model_name_or_path models/$TASK_NAME/Polar/ \
  --task_name $TASK_NAME \
  --do_eval \
  --max_seq_length 128 \
  --output_dir models/$TASK_NAME/Polar/ \
  --logging_steps 10000\
  --save_steps 10000\
  --overwrite_output_dir\
  --use_polar\
  --no_cuda



